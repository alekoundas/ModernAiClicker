<Page
    x:Class="ModernAiClicker.Views.Pages.Executions.CursorClickExecutionPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="clr-namespace:Model.Enums;assembly=Model"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ModernAiClicker.Views.Pages.Executions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="CursorClickExecutionPage"
    d:DataContext="{d:DesignInstance local:CursorClickExecutionPage,
    IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <StackPanel>

        <Label>Configure click action</Label>


        <Grid Margin="10,10,10,50">

            <Grid.Resources>

                <ObjectDataProvider
                    x:Key="MouseActionsEnum"
                    MethodName="GetValues"
                    ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="enum:MouseActionsEnum" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <ObjectDataProvider
                    x:Key="MouseButtonEnum"
                    MethodName="GetValues"
                    ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="enum:MouseButtonsEnum" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="0.3*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />

                <RowDefinition Name="rowToHide">
                    <RowDefinition.Style>
                        <Style TargetType="{x:Type RowDefinition}">
                            <Setter Property="Height" Value="0" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Execution.FlowStep.MouseAction}" Value="{x:Static enum:MouseActionsEnum.LOOP_CLICK}">
                                    <Setter Property="Height" Value="Auto" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RowDefinition.Style>
                </RowDefinition>

            </Grid.RowDefinitions>








            <StackPanel>

                <Label>Click button</Label>
                <ComboBox ItemsSource="{Binding MouseButtonsEnum}" SelectedItem="{Binding Execution.FlowStep.MouseButton}" />

                <Label>Click action</Label>
                <ComboBox ItemsSource="{Binding MouseActionsEnum}" SelectedItem="{Binding Execution.FlowStep.MouseAction}" />

            </StackPanel>

            <StackPanel Grid.Row="1">

                <Label>Debounce time (miliseconds)</Label>
                <TextBox Text="{Binding Execution.FlowStep.MouseLoopDebounceTime, Mode=TwoWay}" />


                <Label>Loop times</Label>
                <TextBox Text="{Binding Execution.FlowStep.MouseLoopTimes, Mode=TwoWay}" />


                <Label>Infinite loop</Label>
                <CheckBox IsChecked="{Binding Execution.FlowStep.MouseLoopInfinite}" />

            </StackPanel>

        </Grid>







        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" HorizontalAlignment="Left">
                <Button Content="Cancel">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ButtonCancelClickCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="1" HorizontalAlignment="right">
                <Button Content="Save">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ButtonSaveClickCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
        </Grid>
    </StackPanel>

</Page>