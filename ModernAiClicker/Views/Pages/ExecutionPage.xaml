<Page
    x:Class="ModernAiClicker.Views.Pages.ExecutionPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ModernAiClicker.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ModernAiClicker.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:ModernAiClicker.Models"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vm="clr-namespace:ModernAiClicker.ViewModels.Pages"
    Title="ExecutionPage"
    d:DataContext="{d:DesignInstance local:ExecutionPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ScrollViewer.CanContentScroll="False"
    mc:Ignorable="d">

    <Page.Resources>

        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />



        <!--  expander style  -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Width="16"
                            Height="16"
                            Padding="5,5,5,5"
                            Background="Transparent">
                            <Path
                                x:Name="ExpandPath"
                                Data="{StaticResource TreeArrow}"
                                Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                                Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
                                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
                                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>







        <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="1,0,0,0" />
            <!--<Setter Property="Width" Value="1000" />-->

            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton
                                x:Name="Expander"
                                ClickMode="Press"
                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpandCollapseToggleStyle}" />
                            <Border
                                x:Name="Bd"
                                Grid.Column="1"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="PART_Header"
                                    HorizontalAlignment="Stretch"
                                    ContentSource="Header"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ItemsPresenter
                                x:Name="ItemsHost"
                                Grid.Row="1"
                                Grid.Column="1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="BorderThickness" Value="11" />
                                <!--<Setter TargetName="Bd" Property="Background" Value="Transparent" />-->
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />-->
                            </Trigger>
                            <!--<Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>-->
            <!--<Style.Triggers>
            -->
            <!--  Selected and has focus  -->
            <!--
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="red" />
                </Trigger>
            -->
            <!--  Mouse over  -->
            <!--<Trigger Property="helpers:TreeView_IsMouseDirectlyOverItem.IsMouseDirectlyOverItem" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFFAFBFD" Offset="0"/>
                                <GradientStop Color="#FFEBF3FD" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="#B8D6FB"/>
                </Trigger>-->
            <!--  Selected but does not have the focus  -->
            <!--
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="red" />
                </MultiTrigger>
            </Style.Triggers>-->
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2" />
                </Style>
            </Style.Resources>
        </Style>
    </Page.Resources>





    <StackPanel>
        <!--  Flows Dropdown  -->
        <Grid VerticalAlignment="Top">

            <!--  Grid Definition  -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="0.1*" />
            </Grid.ColumnDefinitions>

            <ComboBox
                Name="ProcessList"
                Grid.Column="2"
                Grid.ColumnSpan="2"
                Margin="0,0,0,20"
                DisplayMemberPath="Id"
                ItemsSource="{Binding ViewModel.ComboBoxFlows}"
                SelectedItem="{Binding ViewModel.ComboBoxSelectedFlow}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ViewModel.ComboBoxSelectionChangedCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </Grid>

        <Grid VerticalAlignment="Top">

            <!--  Grid Definition  -->
            <Grid.Resources>
                <converters:EventParammeterConverter x:Key="EventParammeterConverter" />
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="0.1*" />
            </Grid.ColumnDefinitions>

            <!--  Frame  -->
            <GroupBox
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                MinHeight="400"
                Margin="0,0,20,50"
                Padding="10,20,0,10">
                <ScrollViewer>
                    <Frame
                        x:Name="UIFlowStepDetailFrame"
                        ScrollViewer.CanContentScroll="True"
                        ScrollViewer.VerticalScrollBarVisibility="Visible" />
                </ScrollViewer>
            </GroupBox>


            <!--  TreeView  -->
            <StackPanel
                Grid.Row="0"
                Grid.Column="3"
                Grid.ColumnSpan="2"
                VerticalAlignment="Top">

                <Border
                    Grid.Row="1"
                    Grid.RowSpan="4"
                    Grid.Column="3"
                    Grid.ColumnSpan="2"
                    MaxHeight="500"
                    BorderBrush="White"
                    BorderThickness="2"
                    CornerRadius="2">
                    <TreeView
                        x:Name="FolderView"
                        HorizontalContentAlignment="Stretch"
                        ItemContainerStyle="{StaticResource TreeViewItemStyle1}"
                        ItemsSource="{Binding ViewModel.TreeviewFlows}">

                        <!--  Set SelectedItem on change  -->
                        <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectedItemChanged">
                                <i:InvokeCommandAction Command="{Binding ViewModel.TreeViewItem_OnItemSelectedCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->

                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding FlowSteps}">

                                <!--  Parent TreeViewItem  -->
                                <Border
                                    BorderBrush="White"
                                    BorderThickness="1"
                                    CornerRadius="5">
                                    <StackPanel
                                        Height="50"
                                        MinWidth="300"
                                        Orientation="Horizontal">

                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                            Text="{Binding Name}" />

                                    </StackPanel>
                                </Border>

                                <!--  Children TreeViewItem  -->
                                <HierarchicalDataTemplate.ItemTemplate>
                                    <DataTemplate>
                                        <Border
                                            MinWidth="250"
                                            BorderBrush="White"
                                            BorderThickness="1"
                                            CornerRadius="5">

                                            <!--  TreeViewItem ContentPresenter Presentations  -->
                                            <ContentPresenter Content="{Binding}">
                                                <ContentPresenter.Resources>


                                                    <!--  Child TreeViewItem Existing ContentPresenter (Existing Flow Step)  -->
                                                    <DataTemplate x:Key="FlowStepExisting">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="0.4*" />
                                                                <ColumnDefinition Width="1*" />
                                                                <ColumnDefinition Width="1*" />
                                                                <ColumnDefinition Width="0.1*" />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="1*" />
                                                                <RowDefinition Height="1*" />
                                                            </Grid.RowDefinitions>

                                                            <TextBlock
                                                                Grid.Row="0"
                                                                Grid.RowSpan="2"
                                                                Grid.Column="0"
                                                                Padding="10"
                                                                VerticalAlignment="Center"
                                                                Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}">
                                                                <Run Text="{Binding Id}" />
                                                                <Run Text="." />
                                                            </TextBlock>

                                                            <TextBlock
                                                                Grid.Row="0"
                                                                Grid.Column="1"
                                                                Padding="10"
                                                                VerticalAlignment="Center"
                                                                Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                                                Text="{Binding Name}" />

                                                            <TextBlock
                                                                Grid.Row="1"
                                                                Grid.Column="1"
                                                                Padding="10"
                                                                VerticalAlignment="Center"
                                                                Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                                                Text="{Binding FlowStepType}" />


                                                        </Grid>
                                                    </DataTemplate>


                                                    <!--  Child TreeViewItem New ContentPresenter  (New Flow Step)  -->
                                                    <DataTemplate x:Key="FlowStepNew">
                                                        <ui:Button
                                                            x:Name="TreeViewItemButtonNew"
                                                            Padding="10"
                                                            HorizontalAlignment="Center"
                                                            Content="New">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="Click">
                                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FlowsPage}}, Path=ViewModel.TreeViewItem_OnButtonNewClickCommand}" PassEventArgsToCommand="True">
                                                                        <i:InvokeCommandAction.CommandParameter>
                                                                            <MultiBinding Converter="{StaticResource EventParammeterConverter}">
                                                                                <Binding ElementName="TreeViewItemButtonNew" />
                                                                                <Binding Path="FlowId" />
                                                                                <Binding Path="Id" />
                                                                            </MultiBinding>
                                                                        </i:InvokeCommandAction.CommandParameter>
                                                                    </i:InvokeCommandAction>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </ui:Button>
                                                    </DataTemplate>
                                                </ContentPresenter.Resources>



                                                <!--  ContentPresenter Triggers  -->
                                                <ContentPresenter.Style>
                                                    <Style TargetType="{x:Type ContentPresenter}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsNew}" Value="false">
                                                                <Setter Property="ContentTemplate" Value="{StaticResource FlowStepExisting}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsNew}" Value="true">
                                                                <Setter Property="ContentTemplate" Value="{StaticResource FlowStepNew}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentPresenter.Style>

                                            </ContentPresenter>
                                        </Border>
                                    </DataTemplate>
                                </HierarchicalDataTemplate.ItemTemplate>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>

                    </TreeView>
                </Border>

            </StackPanel>
        </Grid>
    </StackPanel>
</Page>


