<Page
    x:Class="ModernAiClicker.Views.Pages.FlowsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ModernAiClicker.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ModernAiClicker.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Model.Models;assembly=Model"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vm="clr-namespace:ModernAiClicker.ViewModels.Pages"
    Title="FlowsPage"
    d:DataContext="{d:DesignInstance local:FlowsPage,
    IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ScrollViewer.CanContentScroll="False"
    mc:Ignorable="d">

    <Page.Resources>

        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />



        <!--  expander style  -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Width="16"
                            Height="16"
                            Padding="5,5,5,5"
                            Background="Transparent">
                            <Path
                                x:Name="ExpandPath"
                                Data="{StaticResource TreeArrow}"
                                Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                                Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
                                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
                                <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>







        <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="1,0,0,0" />
            <!--<Setter Property="Width" Value="1000" />-->

            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="aaas" TargetType="{x:Type TreeViewItem}">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ToggleButton
                                x:Name="Expander"
                                IsChecked="{Binding IsExpanded}"
                                Style="{StaticResource ExpandCollapseToggleStyle}" />
                            <Border
                                x:Name="Bd"
                                Grid.Column="1"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="PART_Header"
                                    HorizontalAlignment="Stretch"
                                    ContentSource="Header"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ItemsPresenter
                                x:Name="ItemsHost"
                                Grid.Row="1"
                                Grid.Column="1" />

                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ItemsHost" Property="Width" Value="50" />
                            </Trigger>-->
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="#403d7c" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                            </MultiTrigger>
                            <DataTrigger Binding="{Binding IsNew}" Value="true">
                                <Setter TargetName="PART_Header" Property="HorizontalAlignment" Value="Center" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsExpanded}" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="ItemsHost" Property="Width" Value="50" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2" />
                </Style>
            </Style.Resources>
        </Style>


    </Page.Resources>

    <Grid VerticalAlignment="Top">


        <!--  Grid Definition  -->
        <Grid.Resources>
            <converters:EventParammeterConverter x:Key="EventParammeterConverter" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>


        <GroupBox
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            MinHeight="400"
            Margin="0,0,20,50"
            Padding="10,20,0,10">
            <ScrollViewer>
                <Frame
                    x:Name="UIFlowStepTypeSelectionFrame"
                    ScrollViewer.CanContentScroll="True"
                    ScrollViewer.VerticalScrollBarVisibility="Visible" />
            </ScrollViewer>
        </GroupBox>

        <StackPanel
            Grid.Row="0"
            Grid.Column="3"
            Grid.ColumnSpan="2"
            VerticalAlignment="Top">


            <!--  Buttons Add/Edit  -->
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <Button
                    Grid.Row="0"
                    Grid.Column="4"
                    Margin="10"
                    Padding="30,20"
                    Content="Add"
                    IsEnabled="true">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ButtonAddClickCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <!--<ui:Button
                Grid.Row="0"
                Grid.Column="4"
                Padding="30,20"
                Content="Edit"
                IsEnabled="true">
                <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                <i:InvokeCommandAction Command="{Binding ViewModel.ButtonEditClickCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
                </i:Interaction.Triggers>
                </ui:Button>-->
            </StackPanel>




            <!--  TreeView  -->
            <Border
                Grid.Row="1"
                Grid.RowSpan="4"
                Grid.Column="3"
                Grid.ColumnSpan="2"
                BorderBrush="White"
                BorderThickness="2"
                CornerRadius="2">
                <TreeView
                    x:Name="FolderView"
                    HorizontalContentAlignment="Stretch"
                    DockPanel.Dock="Right"
                    ItemContainerStyle="{StaticResource TreeViewItemStyle1}"
                    ItemsSource="{Binding ViewModel.FlowsList}">
                    <!--  Set SelectedItem on change  -->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding ViewModel.TreeViewItem_OnItemSelectedCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <TreeView.Resources>

                        <!--  Parent TreeViewItem  -->
                        <HierarchicalDataTemplate DataType="{x:Type models:Flow}" ItemsSource="{Binding FlowSteps}">
                            <Border
                                BorderBrush="White"
                                BorderThickness="1"
                                CornerRadius="5">

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.4*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="0.1*" />
                                    </Grid.ColumnDefinitions>


                                    <TextBlock
                                        Grid.Column="0"
                                        Padding="10"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}">
                                        <Run Text="{Binding Id}" />
                                        <Run Text="." />
                                    </TextBlock>

                                    <TextBlock
                                        Grid.Column="2"
                                        Padding="10"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                        Text="{Binding Name}" />

                                    <Button
                                        x:Name="TreeViewItemFlowDeleteButton"
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.Column="2"
                                        Grid.ColumnSpan="2"
                                        Margin="0,0,0,0"
                                        Padding="10"
                                        HorizontalAlignment="Center"
                                        Content="Delete">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FlowsPage}}, Path=ViewModel.TreeViewItemFlowDeleteButtonClickCommand}">
                                                    <i:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource EventParammeterConverter}">
                                                            <Binding ElementName="TreeViewItemFlowDeleteButton" />
                                                            <Binding Path="Id" />
                                                        </MultiBinding>
                                                    </i:InvokeCommandAction.CommandParameter>
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>

                                </Grid>
                            </Border>

                        </HierarchicalDataTemplate>


                        <HierarchicalDataTemplate DataType="{x:Type models:FlowStep}" ItemsSource="{Binding ChildrenFlowSteps}">
                            <Border
                                MinWidth="250"
                                BorderBrush="White"
                                BorderThickness="1"
                                CornerRadius="5">

                                <!--  TreeViewItem ContentPresenter Presentations  -->
                                <ContentPresenter Content="{Binding}">
                                    <ContentPresenter.Resources>


                                        <!--  Child TreeViewItem Existing ContentPresenter (Existing Flow Step)  -->
                                        <DataTemplate x:Key="FlowStepExisting">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="0.4*" />
                                                    <ColumnDefinition Width="1*" />
                                                    <ColumnDefinition Width="1*" />
                                                    <ColumnDefinition Width="0.1*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="1*" />
                                                    <RowDefinition Height="1*" />
                                                </Grid.RowDefinitions>

                                                <TextBlock
                                                    Grid.Row="0"
                                                    Grid.RowSpan="2"
                                                    Grid.Column="0"
                                                    Padding="10"
                                                    VerticalAlignment="Center"
                                                    Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}">
                                                    <Run Text="{Binding Id}" />
                                                    <Run Text="." />
                                                </TextBlock>

                                                <TextBlock
                                                    Grid.Row="0"
                                                    Grid.Column="1"
                                                    Padding="10"
                                                    VerticalAlignment="Center"
                                                    Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                                    Text="{Binding Name}" />

                                                <TextBlock
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Padding="10"
                                                    VerticalAlignment="Center"
                                                    Foreground="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
                                                    Text="{Binding FlowStepType}" />

                                                <Button
                                                    x:Name="TreeViewItemButtonDelete"
                                                    Grid.Row="0"
                                                    Grid.RowSpan="2"
                                                    Grid.Column="2"
                                                    Grid.ColumnSpan="2"
                                                    Margin="0,0,0,0"
                                                    Padding="10"
                                                    HorizontalAlignment="Center"
                                                    Content="Delete">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FlowsPage}}, Path=ViewModel.TreeViewItemButtonDeleteClickCommand}">
                                                                <i:InvokeCommandAction.CommandParameter>
                                                                    <MultiBinding Converter="{StaticResource EventParammeterConverter}">
                                                                        <Binding ElementName="TreeViewItemButtonDelete" />
                                                                        <Binding Path="FlowId" />
                                                                        <Binding Path="Id" />
                                                                    </MultiBinding>
                                                                </i:InvokeCommandAction.CommandParameter>
                                                            </i:InvokeCommandAction>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                            </Grid>
                                        </DataTemplate>


                                        <!--  Child TreeViewItem New ContentPresenter  (New Flow Step)  -->
                                        <DataTemplate x:Key="FlowStepNew">
                                            <ui:Button
                                                x:Name="TreeViewItemButtonNew"
                                                Padding="10"
                                                HorizontalAlignment="Center"
                                                Content="New">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FlowsPage}}, Path=ViewModel.TreeViewItem_OnButtonNewClickCommand}" PassEventArgsToCommand="True">
                                                            <i:InvokeCommandAction.CommandParameter>
                                                                <MultiBinding Converter="{StaticResource EventParammeterConverter}">
                                                                    <Binding ElementName="TreeViewItemButtonNew" />
                                                                    <Binding Path="FlowId" />
                                                                    <Binding Path="Id" />
                                                                </MultiBinding>
                                                            </i:InvokeCommandAction.CommandParameter>
                                                        </i:InvokeCommandAction>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </ui:Button>
                                        </DataTemplate>



                                    </ContentPresenter.Resources>



                                    <!--  ContentPresenter Triggers  -->
                                    <ContentPresenter.Style>
                                        <Style TargetType="{x:Type ContentPresenter}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsNew}" Value="false">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource FlowStepExisting}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsNew}" Value="true">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource FlowStepNew}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentPresenter.Style>

                                </ContentPresenter>
                            </Border>

                        </HierarchicalDataTemplate>




                    </TreeView.Resources>
                </TreeView>
            </Border>

        </StackPanel>
    </Grid>
</Page>


